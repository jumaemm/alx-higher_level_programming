===========================
How to use 3-say_my_name.py
===========================

The module defines the function ``say_my_name(first_name, last_name="")``.

Usage
=====

``say_my_name(...)`` prints out "My name is <first_name> <last_name>".

::

	>>> say_my_name = __import__('3-say_my_name').say_my_name
	>>> say_my_name("Emmanuel", "Juma")
	My name is Emmanuel Juma

::

	>>> say_my_name("Emmanuel Juma", "Raphael Sikuku")
	My name is Emmanuel Juma Raphael Sikuku

``last_name`` has a default value if none is provided

::

	>>> say_my_name("Emmanuel")
	My name is Emmanuel 

Invalid Names
=============

Both params must be strings. Otherwise a TypeError is raised

::

	>>> say_my_name("Boy", 7)
	Traceback (most recent call last):
	TypeError: last_name must be a string

::

	>>> say_my_name(["Theophilus", "James", "Peter"], "Juma")
	Traceback (most recent call last):
	TypeError: first_name must be a string

::

	>>> say_my_name(None)
	Traceback (most recent call last):
	TypeError: first_name must be a string

Atleast one name must be provided


::

    >>> say_my_name()
    Traceback (most recent call last):
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'
