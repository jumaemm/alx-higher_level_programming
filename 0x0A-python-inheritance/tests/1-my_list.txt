=======================
How to use 1-my_list.py
=======================

This module has a list subclass

Usage
======

``print_sorted(self)`` prints a MyList object in sorted order

::

	>>> MyList = __import__("1-my_list").MyList
	>>> issubclass(MyList, list)
	True

The module should have a docstring

::

	>>> mod_doc = __import__("1-my_list").__doc__
	>>> len(mod_doc) > 1
	True

The class should have a docstring

::

	>>> class_doc = __import__("1-my_list").MyList.__doc__
	>>> len(class_doc) > 1
	True

The method should have a docstring

::

	>>> method_doc = __import__("1-my_list").MyList.print_sorted.__doc__
	>>> len(method_doc) > 1
	True

Check for empty list

::

	>>> l = MyList()
	>>> l.print_sorted()
	[]

Check for appends

::

	>>> l.append(45)
	>>> l.append(32)
	>>> l.append(20)
	>>> l.append(19)
	>>> l.append(24)
	>>> l.print_sorted()
	[19, 20, 24, 32, 45]

Check for too many args

::

	>>> l.print_sorted(23)
	Traceback (most recent call last):
	...
	TypeError: print_sorted() takes 1 positional argument but 2 were given
